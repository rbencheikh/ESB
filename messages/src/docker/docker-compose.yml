version: "3.2"
networks:
  metrics:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - metrics

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
    expose:
      - 9999
    networks:
      - metrics

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    depends_on:
      - kafka
    ports:
      - 9308:9308
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_VERSION: "2.0.0"
      LOG_LEVEL: info
    command:
      - "--kafka.server=kafka:9092"
    networks:
      - metrics

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - metrics

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true  # Enable embedding
      - GF_AUTH_ANONYMOUS_ENABLED=true    # Enable anonymous access
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.  # Set the organization name
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer # Set the role for anonymous users
    networks:
      - metrics